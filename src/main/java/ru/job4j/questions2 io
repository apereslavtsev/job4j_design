1. Что такое поток ввода-вывода?
    - некий механизм передачи данных
    Абстрактная сущность, с помощью которой происходит взаимодействие java программы с внешним миром.
    input output,  бывает символьный, байтовый
    в итоге типа потоков
    InputStream — поток для чтения байтов (поток ввода)
    Reader — поток для чтения символов (поток ввода)
    OutputStream — поток для записи байтов (поток вывода)
    Writer — поток для записи символов (поток вывода)

2. Что такое Java IO?
    - IO API – (Input & Output) в первую очередь это Java API, которые облегчают работу с потоками.
     В java.io существуют так называемые потоки ввода и вывода (InputStream and OutputStream).
    В основном java.io предназначен для чтения и записи данных в ресурс:
            файл;
            при работе с сетевым подключением;
            System.err, System.in, System.out;
            при работе с буфером.


3. Что такое Java NIO?
    Java non-blocking IO / new IO
    работа с IO без блокировки, с помощью Channel Selector

4. Что такое Scanner?
    Scanner класс в java.util для чтение данных примитивных типов int, double, string и т.д
    Для чтения данных типа XYZ используется метод nextXYZ().
    Для проверки что есть данные такого типа hasNextXYZ()
    Например:
        hasNextBoolean()
        hasNextByte()
        hasNextDouble()
        hasNextFloat()

5. Как работает Scanner внутри?
    использует регулярные выражения(Можно изменить разделитель useDelimeter())
    кэширует данные

6. Какие базовые методы существуют в Scanner?
    delimiter() Устанавливает регулярное выражение в качестве разделителя.
    hasNextLine()
    nextLine()
    hasNextInt()
    //nextIntBoolean()

7. Что такое байтовый поток? Как он реализован внутри?
    InputStream, OutputStream
    Byte streams работает с данными побайтово (8 bits).
    Например, FileInputStream используется для чтения и FileOutputStream для записи.
    Byte streams интерфейс, который внутри основан на байтовом массиве.
    В основе находится некий буфер который заполняется, вычитывается и заново заполняется.

8. Что такое символьный поток? Как он реализован внутри?
    В Java, символы хранятся в кодировке Unicode (16 bit).
    Символный поток позволяет читать данные символ за символом.
    Для пример FileReader и FileWriter символьные потоки. Можно задать свою кодировку

9. Что такое буферизированный поток?
    Эти потоки добавляют к стандартным специальный буфер в памяти,
    с помощью которого повышается производительность при чтении и записи потоков.
    BufferedInputStream и BufferedOutputStream

10. Что такое форматированный вывод? Какие механизмы позволяют осуществить форматированный вызов?
    String output = String.format("%s = %d", "joe", 35); String.format(); Formatter
    %a Шестнадцатеричное число с плавающей точкой
    %b Булево значение
    %c Символ
    %d Десятичное целое
    %e Число в научной записи
    %f Десятичное число с плавающей точкой
    %h Хеш-код от аргумента
    %o Восьмеричное целое
    %n Символ переноса строки
    %t Время
    %x Шестнадцатеричное целое

11. Как осуществляется ввод и вывод из командной строки?
    По умолчанию ввод с клавиатуры, вывод на монитор.

    Класс System содержит также три переменные предопределенных потоков ввода-вывода: in, out и err
    Переменная System.out ссылается на стандартный поток вывода. По умолчанию это консоль.
    Переменная System.in ссылается на стандартный поток ввода, которым по умолчанию является клавиатура.
    System.err - для ошибок.
    значения переменных можно переопределять

12. Что такое класс Console? Расскажите его АПИ.
    Альтернатива стандратным потокам ввода / вывода класс Console.

    Для создание экземпляра используется System.console().
    Метод может вернуть NULL если консоль недоступна.
    Консоль позволяет вводить пароль используя метод readPassword (не видны символы при вводе, не сохраняется в памяти).

    flush(): выводит на консоль все данные из буфера
    format(): выводит на консоль строку с использованием форматирования
    printf(): выводит на консоль строку с использованием форматирования (фактически то же самое, что и предыдущий метод)
    String readLine(): считывает с консоли введенную пользователем строку
    char[] readPassword(): считывает с консоли введенную пользователем строку, при этом символы строки не отображаются на консоли

13. Что такое поток данных? Data stream.
    Классы DataOutputStream и DataInputStream позволяют
    записывать и считывать данные примитивных типов (boolean, char, byte, short, int, long, float, and double).

    DataOutputStream.writeDouble
    DataInputStream.readDouble

14. Что такое поток объектов, Object stream.
    ObjectOutputStream используется для конвертации объектов в поток. В java это называется сериализация.
    Объект преобразоыванный таким образом может быть сохранен в базу данных, передан по сети и т.п.
    Для записи в файл можно использовать FileOutputStream. Объект который передается в потоке должен реализовывать интерфейс java.io.Serializable.

    FileOutputStream fos = new FileOutputStream("EmployeeObject.ser");
    ObjectOutputStream oos = new ObjectOutputStream(fos);
    // write object to file
    oos.writeObject(emp);
    При сериализации используют переменную SerialVersionUID. Во время сериализации,
    среда выполнения Java создает номер версии для класса, так что она может десереализировать его позже.
    В Java этот номер версии известен как SerialVersionUID. Если во время десериализации, SerialVersionUID не соответствует, то процесс завершится с исключением

    SerialVersionUID используется для указании версии сериализованных данных.

    Когда мы не объявляем SerialVersionUID в нашем классе, среда выполнения Java делает это за нас, но этот процесс чувствителен ко многим метаданным класса включая количество полей, тип полей, модификаторы доступа полей, интерфейсов, которые реализованы в классе и пр. Вы можете найти точную информацию в документации о сериализации от Oracle.
    Рекомендуется объявлять SerialVersionUID как private static final long переменную во избежание механизма по умолчанию.

15. Что такое Path? Как он реализуется на разных ОС?

    Java 7 представляет новую абстракцию для пути, а именно интерфейс Path.
    Он используется в новых функциях и API, по всему NIO.2.
    Объект пути содержит имена каталогов и файлов, которые составляют полный путь до файла/каталога, представленного объектом Path;
    Path содержит методы для извлечения элементов пути, манипуляций с ними и их добавления.

    Путь к файлу, в разных системх может записываться по разному, \ или / поэтому лучше использовать File.separator для построения пути

16. Как получить список файлов?
    Через walkFileTree и FileVisitor
    Или
    Stream<Path> stramFiles = Files.list(Paths.get("dir"));
    Или
    File file = new File("dir");
    File[] filesArr = file.listFiles();
    String[] filesNames = file.list();

17. Как проверить что файловая сущность является файлом или папкой?
18. Как удалить файл?
19. Как переместить файл?
20. Как управлять аттрибутами файла?
21. Как создать файл?
22. Как создать директорию?
23. Как записать в файл?
24. Как прочитать данные из файла?
25. Что такое сокет?
26. Какие виды сокетов есть в Java? С каким протоколом они работают?
27. Как отправить через сокет сообщение?
28. Что такое логирование?
29. Какие уровни логирования вы знаете?
30. Какая библиотека для логгирования используется в курсе? Как ее настроить?
31. Опишите из каких элементов состоит формат JSON
32. Как преобразовать POJO в/из json?
33. Опишите из каких элементов состоит формат XML
34. Как преобразовать POJO в/из xml?